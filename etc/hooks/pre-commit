#!/bin/bash
CODE_DIR="src/"
MD_EXCEPTIONS="etc/ruleset/rules.xml"
PHP_BIN="docker-compose run php"
RED='\033[0;31m'
NC='\033[0m' # No Color


if git rev-parse --verify HEAD
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

FILES=$(git diff --cached --name-only)

if [ "$FILES" == "" ]; then
    exit 0
fi

FILES_TO_CHECK=""
for FILE in $FILES
do
    PHPFILE=$(echo "$FILE" | grep .php) 
    if [ $? -eq 0 ]; 
    then
        FILES_TO_CHECK="$FILES_TO_CHECK $PHPFILE"
    fi
done

if [ "$FILES_TO_CHECK" == "" ]; then
    exit 0
fi

ERRORS=0
    
OUTPUT=$($PHP_BIN etc/phpcs.phar --standard=PSR2 --encoding=utf8 -n -p $FILES_TO_CHECK)
RETVAL=$?

if [ $RETVAL -ne 0 ]; then
    ERRORS=1;
fi 
 
OUTPUT_MD=$($PHP_BIN etc/phpmd.phar $CODE_DIR text $MD_EXCEPTIONS)

if [ $? -ne 0 ]; then
    ERRORS=1;
fi

if [ $ERRORS -ne 0 ]; then
    ERRORS_LIST=$(echo "\n${RED}########################### PHPCS ERRORS ########################### \n")
    ERRORS_LIST="$ERRORS_LIST $(echo "${NC}$OUTPUT")"
    ERRORS_LIST="$ERRORS_LIST $(echo "\n\n\n${RED}########################### PHPMD ERRORS ########################### \n")"
    ERRORS_LIST="$ERRORS_LIST $(echo "${NC}$OUTPUT_MD")"

    ERRORS_LIST="$ERRORS_LIST $(echo "\n\n\n${RED}FIX THE ERRORS TO COMMIT THE CHANGES \n")"
    echo -e "$ERRORS_LIST" 
    exit 1;
fi
